// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OmMediaWorkManagement.ApiService.DataContext;

#nullable disable

namespace OmMediaWorkManagement.ApiService.Migrations
{
    [DbContext(typeof(OmContext))]
    [Migration("20240701092234_updateommediaemployee1")]
    partial class updateommediaemployee1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.JobImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JobTodoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JobTodoId");

                    b.ToTable("JobImages");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.JobToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsStatus")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("JobPostedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JobStatusType")
                        .HasColumnType("integer");

                    b.Property<int?>("PostedBy")
                        .HasColumnType("integer");

                    b.Property<int?>("Price")
                        .HasColumnType("integer");

                    b.Property<double?>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int?>("total")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("JobToDo");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.JobTypeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("JobStatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JobStatusType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("JobTypeStatus");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OmClient");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmClientWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmailSent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPushSent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSMSSent")
                        .HasColumnType("boolean");

                    b.Property<int>("OmClientId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("PrintCount")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int?>("Total")
                        .HasColumnType("integer");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WorkDetails")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OmClientId");

                    b.ToTable("OmClientWork");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("EmployeeProfilePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSalaryPaid")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<decimal>("SalaryAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("OmEmployee");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmEmployeeDocuments", b =>
                {
                    b.Property<int>("OmEmployeeDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OmEmployeeDocumentId"));

                    b.Property<string>("EmployeeDocumentsPath")
                        .HasColumnType("text");

                    b.Property<int>("OmEmployeeId")
                        .HasColumnType("integer");

                    b.HasKey("OmEmployeeDocumentId");

                    b.HasIndex("OmEmployeeId");

                    b.ToTable("OmEmployeeDocuments");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmEmployeeSalary", b =>
                {
                    b.Property<int>("EmployeeSalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeSalaryId"));

                    b.Property<decimal?>("AdvancePayment")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("AdvancePaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("DueBalance")
                        .HasColumnType("numeric");

                    b.Property<int>("OmEmployeeId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("OverBalance")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OverTimeSalary")
                        .HasColumnType("numeric");

                    b.HasKey("EmployeeSalaryId");

                    b.HasIndex("OmEmployeeId");

                    b.ToTable("OmEmployeeSalary");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmEmployeeShift", b =>
                {
                    b.Property<int>("EmployeeShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeShiftId"));

                    b.Property<int>("OmEmployeeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("OverTimePerHourCost")
                        .HasColumnType("numeric");

                    b.Property<string>("ShiftOverTime")
                        .HasColumnType("text");

                    b.Property<string>("ShiftTiming")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EmployeeShiftId");

                    b.HasIndex("OmEmployeeId");

                    b.ToTable("OmEmployeeShift");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmMachines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsRunning")
                        .HasColumnType("boolean");

                    b.Property<string>("MachineDescription")
                        .HasColumnType("text");

                    b.Property<string>("MachineName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OmMachines");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.JobImages", b =>
                {
                    b.HasOne("OmMediaWorkManagement.ApiService.Models.JobToDo", "JobToDo")
                        .WithMany("JobImages")
                        .HasForeignKey("JobTodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobToDo");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmClientWork", b =>
                {
                    b.HasOne("OmMediaWorkManagement.ApiService.Models.OmClient", "OmClient")
                        .WithMany("OmClientWork")
                        .HasForeignKey("OmClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OmClient");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmEmployeeDocuments", b =>
                {
                    b.HasOne("OmMediaWorkManagement.ApiService.Models.OmEmployee", "OmEmployee")
                        .WithMany()
                        .HasForeignKey("OmEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OmEmployee");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmEmployeeSalary", b =>
                {
                    b.HasOne("OmMediaWorkManagement.ApiService.Models.OmEmployee", "OmEmployee")
                        .WithMany()
                        .HasForeignKey("OmEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OmEmployee");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmEmployeeShift", b =>
                {
                    b.HasOne("OmMediaWorkManagement.ApiService.Models.OmEmployee", "OmEmployee")
                        .WithMany()
                        .HasForeignKey("OmEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OmEmployee");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.JobToDo", b =>
                {
                    b.Navigation("JobImages");
                });

            modelBuilder.Entity("OmMediaWorkManagement.ApiService.Models.OmClient", b =>
                {
                    b.Navigation("OmClientWork");
                });
#pragma warning restore 612, 618
        }
    }
}
